variables:
  ModuleName: 'vaultUtils'
  ModuleVersion: '1.1.4'
  DevRepository: 'dev-windows-modules'
  ProdRepository: 'prod-windows-modules'
  Notification: "it-digest"
  
stages:
  - test_dev_code
  - push_to_dev
  - test_prod_code
  - push_to_production

Test Dev Configuration:
  stage: test_dev_code
  script:
   - Invoke-Pester -Script @{Path = "$env:CI_PROJECT_DIR\test.ps1"; Parameters = @{ ProjectName=$ModuleName; ProjectDirectory=$env:CI_PROJECT_DIR; ModuleRepository=@($DevRepository); ModuleVersion=$ModuleVersion} } -Tags @("Dev") -EnableExit
  tags:
    - windows
    - dsc
    - dev
  environment:
    name: staging
  except:
    - master

Push to Dev:
  stage: push_to_dev
  script:
   - .\build.ps1 -ProjectName $ModuleName -ProjectDirectory $env:CI_PROJECT_DIR -ModuleVersion $ModuleVersion -APIKey $env:DevGalleryAPIKey -PSGallery $env:DevGalleryURL -Tags @("DSC","Modules") -ErrorAction Stop -Verbose
  tags:
    - windows
    - dsc
    - dev
  environment:
    name: staging
  except:
    - master

Test Prod Configuration:
  stage: test_prod_code
  script:
   - Invoke-Pester -Script @{Path = "$env:CI_PROJECT_DIR\test.ps1"; Parameters = @{ ProjectName=$ModuleName; ProjectDirectory=$env:CI_PROJECT_DIR; ModuleRepository=@($ProdRepository); ModuleVersion=$ModuleVersion} } -Tags @("Dev") -EnableExit
  tags:
    - windows
    - dsc
    - prod
  environment:
    name: staging
  only:
    - master

Push to Production:
  stage: push_to_production
  when: manual
  script:
   - .\build.ps1 -ProjectName $ModuleName -ProjectDirectory $env:CI_PROJECT_DIR -ModuleVersion $ModuleVersion -APIKey $env:ProdGalleryAPIKey -PSGallery $env:ProdGalleryURL -Tags @("DSC","Modules") -Notification $Notification -ErrorAction Stop -Verbose
  tags:
    - windows
    - dsc
    - prod
  environment:
    name: production
  only:
    - master
